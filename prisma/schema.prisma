generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  pro
  admin
}

enum EstablishmentCategory {
  bar
  bowling
  escape_game
  market
  nightclub
  restaurant
  cinema
  theater
  concert
  museum
  other
}

enum EstablishmentStatus {
  active
  pending
  suspended
}

enum SubscriptionType {
  basic
  premium
}

enum FeaturedPlacementType {
  homepage
  search
  map
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String?
  role         UserRole @default(user)
  name         String?
  phone        String?
  preferences  Json?
  establishments Establishment[] @relation("OwnerEstablishments")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Establishment {
  id                      String                 @id @default(cuid())
  name                    String
  slug                    String                 @unique
  description             String?
  address                 String
  latitude                Float
  longitude               Float
  phone                   String?
  email                   String?
  website                 String?
  instagram               String?
  category                EstablishmentCategory
  openingHours            Json?
  status                  EstablishmentStatus    @default(pending)
  subscriptionType        SubscriptionType       @default(basic)
  subscriptionExpiresAt   DateTime?
  ownerId                 String?
  owner                   User?                  @relation("OwnerEstablishments", fields: [ownerId], references: [id])
  images                  Image[]
  events                  Event[]
  featuredPromotions      FeaturedPromotion[]
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  @@index([category])
  @@index([status])
  @@index([latitude, longitude])
}

model Event {
  id              String        @id @default(cuid())
  establishmentId String
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
  title           String
  description     String?
  startDate       DateTime
  endDate         DateTime
  imageUrl        String?
  isFeatured      Boolean       @default(false)
  createdAt       DateTime      @default(now())
  @@index([startDate])
  @@index([endDate])
}

model Image {
  id              String        @id @default(cuid())
  establishmentId String
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
  url             String
  isPrimary       Boolean       @default(false)
  altText         String?
}

model FeaturedPromotion {
  id              String                 @id @default(cuid())
  establishmentId String
  establishment   Establishment          @relation(fields: [establishmentId], references: [id])
  type            FeaturedPlacementType
  startDate       DateTime
  endDate         DateTime
  pricePaidCents  Int
  status          String                 @default("active")
  @@index([type])
  @@index([startDate])
  @@index([endDate])
}


