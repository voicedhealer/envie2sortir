generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// *
///  * USER - Utilisateurs du site (consommateurs + professionnels)
///  * Peuvent : chercher, liker, commenter, mettre en favoris
///  * Si establishmentId est défini : professionnel propriétaire d'un établissement
model User {
  id              String          @id @default(cuid())
  email           String          @unique
  passwordHash    String?
  role            UserRole        @default(user)
  firstName       String?
  lastName        String?
  name            String?
  phone           String?
  preferences     Json?
  newsletterOptIn Boolean         @default(true)
  // Champs pour l'authentification sociale
  provider        String?         // "local", "google", "facebook"
  providerId      String?         // ID du provider social
  avatar          String?         // URL de l'avatar
  isVerified      Boolean         @default(false)
  establishmentId String?         // ID de l'établissement (pour les pros)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  establishments  Establishment[]
  comments        UserComment[]
  favorites       UserFavorite[]
  likes           UserLike[]

  @@map("users")
}

/// *
///  * PROFESSIONAL - Propriétaires d'établissements
///  * Seuls autorisés à créer/gérer des établissements
///  * Vérification obligatoire via SIRET
model Professional {
  id               String           @id @default(cuid())
  siret            String           @unique
  firstName        String
  lastName         String
  email            String           @unique
  phone            String
  companyName      String
  legalStatus      String
  subscriptionPlan SubscriptionPlan @default(FREE)
  siretVerified    Boolean          @default(false)
  siretVerifiedAt  DateTime?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  @@map("professionals")
}

/// *
///  * ESTABLISHMENT - Établissements de sortie
///  * Créés et gérés uniquement par des Professionals
///  * Système de validation par l'admin avant publication
model Establishment {
  id                 String              @id @default(cuid())
  name               String
  slug               String              @unique
  description        String?
  address            String
  city               String?
  postalCode         String?
  country            String              @default("France")
  latitude           Float?
  longitude          Float?
  phone              String?
  email              String?
  website            String?
  instagram          String?
  facebook           String?
  activities         Json?
  specialites        String              @default("")
  motsClesRecherche  String?
  services           Json?
  ambiance           Json?
  paymentMethods     Json?
  horairesOuverture  Json?
  prixMoyen          Float?
  capaciteMax        Int?
  accessibilite      Boolean             @default(false)
  parking            Boolean             @default(false)
  terrasse           Boolean             @default(false)
  status             EstablishmentStatus @default(pending)
  subscription       SubscriptionType    @default(STANDARD)
  ownerId            String
  viewsCount         Int                 @default(0)
  clicksCount        Int                 @default(0)
  avgRating          Float?
  totalComments      Int                 @default(0)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  tiktok             String?
  imageUrl           String?
  priceMax           Float?
  priceMin           Float?
  informationsPratiques Json?
  
  // Nouveaux champs pour l'enrichissement automatique
  googlePlaceId      String?             // ID Google Places pour l'enrichissement
  googleBusinessUrl  String?             // URL Google My Business
  enriched           Boolean             @default(false) // Indique si l'établissement a été enrichi
  enrichmentData     Json?               // Données d'enrichissement complètes
  envieTags          Json?               // Tags "envie" générés automatiquement
  priceLevel         Int?                // Niveau de prix (1-4) de Google
  googleRating       Float?              // Note Google
  googleReviewCount  Int?                // Nombre d'avis Google
  theForkLink        String?             // Lien TheFork pour réservations
  specialties        Json?               // Spécialités extraites des avis
  atmosphere         Json?               // Ambiance détectée
  accessibility      Json?               // Informations d'accessibilité
  
  owner              User                @relation(fields: [ownerId], references: [id])
  tags               EtablissementTag[]
  events             Event[]
  featuredPromotions FeaturedPromotion[]
  images             Image[]
  pricing            Pricing[]
  tariffs            Tariff[]
  comments           UserComment[]
  favorites          UserFavorite[]
  likes              UserLike[]

  @@map("establishments")
}

/// *
///  * USER_FAVORITE - Établissements mis en favoris
///  * Permet aux users de sauvegarder leurs établissements préférés
///  * Active les notifications newsletter
model UserFavorite {
  id                String        @id @default(cuid())
  userId            String
  establishmentId   String
  receiveNewsletter Boolean       @default(true)
  createdAt         DateTime      @default(now())
  establishment     Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)
  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, establishmentId])
  @@map("user_favorites")
}

/// *
///  * USER_LIKE - Système de likes
///  * Permet aux users d'exprimer leur appréciation rapidement
model UserLike {
  id              String        @id @default(cuid())
  userId          String
  establishmentId String
  createdAt       DateTime      @default(now())
  establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, establishmentId])
  @@map("user_likes")
}

/// *
///  * USER_COMMENT - Avis et commentaires
///  * Système d'avis complet avec note sur 5 étoiles
model UserComment {
  id              String        @id @default(cuid())
  content         String
  rating          Int?
  userId          String
  establishmentId String
  isVisible       Boolean       @default(true)
  reportedCount   Int           @default(0)
  moderatedAt     DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_comments")
}

/// *
///  * IMAGE - Photos des établissements
///  * Limitation selon l'abonnement : 1 (FREE) ou 10 (PREMIUM)
model Image {
  id              String        @id @default(cuid())
  url             String
  altText         String?
  isPrimary       Boolean       @default(false)
  ordre           Int           @default(0)
  establishmentId String
  createdAt       DateTime      @default(now())
  establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)

  @@map("images")
}

/// *
///  * EVENT - Événements organisés par les établissements
///  * Permet aux pros Premium de promouvoir leurs événements spéciaux
model Event {
  id              String        @id @default(cuid())
  title           String
  description     String?
  startDate       DateTime
  endDate         DateTime?
  imageUrl        String?
  price           Float?
  maxCapacity     Int?
  isRecurring     Boolean       @default(false)
  establishmentId String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)

  @@map("events")
}

/// *
///  * ETABLISSEMENT_TAG - Tags pour la recherche
///  * Système de tags pondérés pour améliorer la recherche "Envie de..."
model EtablissementTag {
  id              Int           @id @default(autoincrement())
  etablissementId String
  tag             String
  typeTag         String
  poids           Int           @default(5)
  createdAt       DateTime      @default(now())
  etablissement   Establishment @relation(fields: [etablissementId], references: [id], onDelete: Cascade)

  @@map("etablissement_tags")
}

/// *
///  * FEATURED_PROMOTION - Promotions mises en avant
///  * Système de mise en avant payante pour les établissements Premium
model FeaturedPromotion {
  id              String                @id @default(cuid())
  title           String
  description     String?
  startDate       DateTime
  endDate         DateTime
  placementType   FeaturedPlacementType
  establishmentId String
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  establishment   Establishment         @relation(fields: [establishmentId], references: [id], onDelete: Cascade)

  @@map("featured_promotions")
}

/// *
///  * PRICING - Tarifs des services/activités
///  * Permet aux établissements de définir leurs prix par service
model Pricing {
  id              String        @id @default(cuid())
  serviceId       String
  price           Float
  establishmentId String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)

  @@map("pricing")
}

/// *
///  * TARIFF - Tarifs personnalisés des établissements
///  * Permet aux professionnels de créer leurs propres tarifs
model Tariff {
  id              String        @id @default(cuid())
  label           String
  price           Float
  establishmentId String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)

  @@map("tariffs")
}

enum UserRole {
  user
  pro
  admin
}

/// *
///  * ACTIVITÉS MULTIPLES POUR SYSTÈME "ENVIE DE..."
///  * Chaque activité correspond à une expérience spécifique
///  * Permet un matching parfait avec les intentions des clients
///  * Un établissement peut proposer plusieurs activités
enum EstablishmentActivity {
  bar_ambiance
  pub_traditionnel
  brasserie_artisanale
  bar_cocktails
  bar_vins
  bar_sports
  rooftop_bar
  bar_karaoké
  bar_jeux
  bar_bières
  restaurant_gastronomique
  restaurant_traditionnel
  restaurant_familial
  bistrot
  brasserie_restaurant
  restaurant_rapide
  restaurant_italien
  restaurant_asiatique
  restaurant_oriental
  restaurant_mexicain
  restaurant_indien
  restaurant_veggie
  creperie
  pizzeria
  kebab
  tacos_mexicain
  burger
  sandwich
  fish_and_chips
  food_truck
  friterie
  poke_bowl
  discotheque
  club_prive
  boite_nuit_mainstream
  club_techno
  club_hip_hop
  club_latino
  dancing_retro
  boite_estudiantine
  bowling
  billard_americain
  billard_francais
  snooker
  ping_pong_bar
  squash
  badminton
  tennis_table
  futsal
  football_5vs5
  football_7vs7
  tennis_exterieur
  padel
  basketball
  beach_volley
  escape_game_horreur
  escape_game_aventure
  escape_game_familial
  escape_game_immersif
  laser_game
  paintball_exterieur
  paintball_interieur
  realite_virtuelle
  salle_jeux_arcade
  casino
  salle_jeux_moderne
  cinema_mainstream
  cinema_art_essai
  cinema_imax
  drive_in
  theatre_classique
  theatre_cafe
  spectacle_humour
  concert_rock
  concert_jazz
  concert_rap
  concert_electronique
  concert_classique
  concert_variete
  musee_art
  musee_histoire
  musee_science
  musee_insolite
  galerie_art
  centre_exposition
  planetarium
  marche_nocturne
  marche_artisanal
  marche_vintage
  festival_plein_air
  foire_commerciale
  salon_professionnel
  spa_detente
  hammam_traditionnel
  sauna_finlandais
  spa_nordique
  centre_massage
  institut_beaute
  salon_coiffure_premium
  onglerie
  piscine_couverte
  piscine_exterieure
  centre_aquatique
  aqua_fitness
  atelier_cuisine
  atelier_patisserie
  atelier_poterie
  atelier_peinture
  cours_danse
  salle_musique
  parc_attraction
  parc_aquatique
  mini_golf
  golf_practice
  karting_interieur
  karting_exterieur
  trampoline_park
  accrobranche
  salle_privee
  peniche
  rooftop_restaurant
  cave_degustation
  microbrasserie
  distillerie
  autre
}

enum EstablishmentStatus {
  active
  pending
  suspended
}

enum SubscriptionPlan {
  FREE
  PREMIUM
}

enum SubscriptionType {
  STANDARD
  PREMIUM
}

enum FeaturedPlacementType {
  homepage
  search
  map
}
