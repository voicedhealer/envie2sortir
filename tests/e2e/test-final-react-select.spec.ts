import { test, expect } from '@playwright/test';

/**
 * Test final avec interaction correcte du React Select
 */

test.describe('Test Final - React Select Activit√©s', () => {
  
  test('Cr√©er un √©tablissement avec s√©lection d\'activit√©s via React Select', async ({ page }) => {
    console.log('üöÄ D√©but du test final avec React Select...');
    
    // ========================================
    // √âTAPE 1 : Navigation et formulaire de compte
    // ========================================
    
    await page.goto('/etablissements/nouveau');
    await page.waitForLoadState('networkidle');
    await page.waitForSelector('input[placeholder="Votre pr√©nom"]');
    
    console.log('‚úÖ Page charg√©e');
    
    // Remplir le formulaire de compte
    const timestamp = Date.now();
    const testEmail = `test-react-select-${timestamp}@example.com`;
    const establishmentName = `Le Bistrot React Select ${timestamp}`;
    
    await page.fill('input[placeholder="Votre pr√©nom"]', 'Marie');
    await page.fill('input[placeholder="Votre nom"]', 'Dupont');
    await page.fill('input[placeholder="votre.email@exemple.com"]', testEmail);
    await page.fill('input[placeholder="Ex: MonMotDePasse123!"]', 'MotDePasse123!');
    await page.fill('input[placeholder="R√©p√©tez votre mot de passe"]', 'MotDePasse123!');
    await page.fill('input[placeholder="06 12 34 56 78 (mobile uniquement)"]', '+33612345678');
    
    console.log('‚úÖ Formulaire de compte rempli');
    
    // Cliquer sur "Validez votre t√©l√©phone"
    const nextButton = page.locator('button:has-text("Validez votre t√©l√©phone")');
    await nextButton.click({ force: true });
    
    // V√©rification SMS
    await page.waitForSelector('text=V√©rification du num√©ro', { timeout: 10000 });
    await page.waitForSelector('text=Code de v√©rification envoy√©', { timeout: 5000 });
    
    const codeInput = page.locator('input[placeholder="123456"]');
    await codeInput.clear();
    await codeInput.fill('123456');
    
    const verifyButton = page.locator('button:has-text("V√©rifier")');
    await verifyButton.click();
    
    await page.waitForTimeout(2000);
    console.log('‚úÖ V√©rification SMS r√©ussie');
    
    // Cliquer sur "Suivant" pour passer √† l'√©tape suivante
    await page.click('button:has-text("Suivant")');
    console.log('‚úÖ Clic sur "Suivant" apr√®s SMS');
    
    // ========================================
    // √âTAPE 2 : Informations professionnelles (SIRET)
    // ========================================
    
    await page.waitForSelector('text=SIRET', { timeout: 10000 });
    console.log('‚úÖ √âtape SIRET visible');
    
    await page.fill('input[type="text"]', '12345678901234');
    await page.click('button:has-text("Suivant")');
    console.log('‚úÖ SIRET rempli et premi√®re validation');
    
    await page.waitForTimeout(2000);
    await page.click('button:has-text("Suivant")');
    console.log('‚úÖ SIRET valid√© et √©tape suivante');
    
    // ========================================
    // √âTAPE 3 : Enrichissement intelligent (√† passer)
    // ========================================
    
    await page.waitForSelector('text=Informations de votre √©tablissement', { timeout: 10000 });
    console.log('‚úÖ √âtape enrichissement visible');
    
    await page.click('button:has-text("Passer cette √©tape")');
    console.log('‚úÖ √âtape enrichissement pass√©e');
    
    // ========================================
    // √âTAPE 4 : Informations de l'√©tablissement
    // ========================================
    
    await page.waitForSelector('text=Informations sur l\'√©tablissement', { timeout: 10000 });
    console.log('‚úÖ √âtape √©tablissement visible');
    
    // Remplir les informations de l'√©tablissement
    await page.fill('input[placeholder="Ex: Le Central Bar"]', establishmentName);
    await page.fill('textarea', 'Un restaurant convivial pour les tests automatis√©s complets.');
    await page.fill('input[placeholder*="Rue de la Pi√®ce Cornue"]', '15 Rue de la R√©publique, 75001 Paris');
    await page.fill('input[placeholder="Ex: 47.302780"]', '48.8566');
    await page.fill('input[placeholder="Ex: 5.114379"]', '2.3522');
    await page.fill('input[placeholder="04 78 90 12 34"]', '01 45 67 89 01');
    await page.fill('input[placeholder="contact@votre-etablissement.com"]', 'contact@bistrot-test-complet.com');
    
    // Remplir les champs de contact
    await page.fill('input[placeholder="06 12 34 56 78"]', '06 12 34 56 78');
    await page.fill('input[placeholder="https://m.me/votre-page-facebook"]', 'https://m.me/test-page');
    
    console.log('‚úÖ Informations √©tablissement remplies');
    
    // ========================================
    // √âTAPE 5 : S√©lection des activit√©s via React Select
    // ========================================
    
    console.log('üéØ Interaction avec le React Select des activit√©s...');
    
    // Attendre que le composant React Select soit charg√©
    await page.waitForTimeout(2000);
    
    // 1. Cliquer sur le conteneur React Select
    const reactSelectContainer = page.locator('.react-select-container, [class*="react-select"]').first();
    const containerCount = await reactSelectContainer.count();
    
    if (containerCount > 0) {
      console.log('‚úÖ Conteneur React Select trouv√©');
      
      // Cliquer sur le conteneur pour l'ouvrir
      await reactSelectContainer.click();
      console.log('‚úÖ Clic sur le conteneur React Select');
      
      // Attendre que le menu s'ouvre
      await page.waitForTimeout(1000);
      
      // 2. Chercher l'input de recherche dans le React Select
      const searchInput = page.locator('.react-select__input, input[class*="react-select"]');
      const searchInputCount = await searchInput.count();
      
      if (searchInputCount > 0) {
        console.log('‚úÖ Input de recherche React Select trouv√©');
        
        // Taper "bar" pour rechercher des activit√©s
        await searchInput.fill('bar');
        console.log('‚úÖ Recherche "bar" effectu√©e');
        
        // Attendre que les options apparaissent
        await page.waitForTimeout(1000);
        
        // 3. Chercher et cliquer sur une option
        const optionElements = await page.locator('.react-select__option, [class*="react-select__option"]').all();
        console.log(`üìù Options trouv√©es: ${optionElements.length}`);
        
        if (optionElements.length > 0) {
          // Cliquer sur la premi√®re option
          await optionElements[0].click();
          console.log('‚úÖ Premi√®re activit√© s√©lectionn√©e');
          
          // Attendre un peu
          await page.waitForTimeout(500);
          
          // Essayer de s√©lectionner une deuxi√®me activit√©
          await searchInput.click();
          await searchInput.fill('restaurant');
          await page.waitForTimeout(500);
          
          const secondOption = optionElements[1];
          const secondOptionCount = await secondOption.count();
          
          if (secondOptionCount > 0) {
            await secondOption.click();
            console.log('‚úÖ Deuxi√®me activit√© s√©lectionn√©e');
          }
        } else {
          console.log('‚ö†Ô∏è Aucune option trouv√©e, tentative de s√©lection directe');
          
          // Essayer de cliquer sur des √©l√©ments contenant "bar" ou "restaurant"
          const barElements = await page.locator('text=bar, text=Bar, text=restaurant, text=Restaurant').all();
          if (barElements.length > 0) {
            await barElements[0].click();
            console.log('‚úÖ Activit√© s√©lectionn√©e via texte');
          }
        }
      } else {
        console.log('‚ö†Ô∏è Input de recherche React Select non trouv√©');
      }
    } else {
      console.log('‚ö†Ô∏è Conteneur React Select non trouv√©');
    }
    
    // ========================================
    // √âTAPES SUIVANTES : Continuer jusqu'√† la fin
    // ========================================
    
    let attempts = 0;
    const maxAttempts = 15;
    let finalStepReached = false;
    
    while (attempts < maxAttempts && !finalStepReached) {
      await page.waitForTimeout(3000);
      
      // V√©rifier l'√©tat actuel
      const h2Elements = await page.locator('h2').all();
      const currentTitle = h2Elements.length > 0 ? await h2Elements[0].textContent() : 'Aucun titre';
      const currentUrl = page.url();
      
      console.log(`üìç Tentative ${attempts + 1} - Titre: "${currentTitle}" - URL: ${currentUrl}`);
      
      // V√©rifier si on est √† la fin
      const createButtons = await page.locator('button:has-text("Cr√©er"), button:has-text("Valider"), button:has-text("Terminer"), button:has-text("Finaliser")').all();
      if (createButtons.length > 0) {
        console.log('‚úÖ Bouton de cr√©ation trouv√© !');
        await createButtons[0].click();
        console.log('‚úÖ Bouton de cr√©ation cliqu√© !');
        finalStepReached = true;
        break;
      }
      
      // V√©rifier si on a √©t√© redirig√©
      if (!currentUrl.includes('/etablissements/nouveau')) {
        console.log('‚úÖ Redirection d√©tect√©e !');
        finalStepReached = true;
        break;
      }
      
      // Cliquer sur "Suivant"
      const nextButtons = await page.locator('button:has-text("Suivant")').all();
      if (nextButtons.length > 0) {
        const isDisabled = await nextButtons[0].isDisabled();
        if (!isDisabled) {
          await nextButtons[0].click();
          attempts++;
          console.log(`‚úÖ Clic sur "Suivant" (tentative ${attempts})`);
        } else {
          console.log('‚ö†Ô∏è Bouton "Suivant" d√©sactiv√©');
          break;
        }
      } else {
        console.log('‚ö†Ô∏è Aucun bouton "Suivant" trouv√©');
        break;
      }
    }
    
    // ========================================
    // V√âRIFICATION FINALE
    // ========================================
    
    await page.waitForTimeout(5000);
    
    // Capturer une screenshot finale
    await page.screenshot({ path: 'playwright-report/test-final-react-select.png', fullPage: true });
    
    // V√©rifier l'URL finale
    const finalUrl = page.url();
    console.log(`üìç URL finale: ${finalUrl}`);
    
    // V√©rifier le titre final
    const finalH2Elements = await page.locator('h2').all();
    const finalTitle = finalH2Elements.length > 0 ? await finalH2Elements[0].textContent() : 'Aucun titre';
    console.log(`üìù Titre final: "${finalTitle}"`);
    
    // ========================================
    // RAPPORT FINAL
    // ========================================
    
    console.log('üìä RAPPORT FINAL:');
    console.log(`  - Nom de l'√©tablissement: ${establishmentName}`);
    console.log(`  - Email de test: ${testEmail}`);
    console.log(`  - URL finale: ${finalUrl}`);
    console.log(`  - Titre final: "${finalTitle}"`);
    console.log(`  - Tentatives: ${attempts}`);
    console.log(`  - Redirection: ${!finalUrl.includes('/etablissements/nouveau') ? 'OUI' : 'NON'}`);
    
    // √âvaluation du succ√®s
    if (!finalUrl.includes('/etablissements/nouveau')) {
      console.log('üéâ SUCC√àS COMPLET ! Redirection effectu√©e !');
    } else if (finalTitle !== 'Informations sur l\'√©tablissement') {
      console.log('üéâ SUCC√àS PARTIEL ! Progression d√©tect√©e !');
    } else {
      console.log('‚ö†Ô∏è √âCHEC ! Aucune progression d√©tect√©e');
    }
    
    console.log('üéâ Test final avec React Select termin√© !');
  });
});
