const { PrismaClient } = require('@prisma/client');

async function deleteTestEstablishment() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üóëÔ∏è Suppression de l\'√©tablissement de test...\n');
    
    // Trouver l'√©tablissement de test
    const testEstablishment = await prisma.establishment.findFirst({
      where: {
        name: {
          contains: 'SARL EXEMPLE'
        }
      },
      select: {
        id: true,
        name: true,
        address: true,
        ownerId: true
      }
    });
    
    if (testEstablishment) {
      console.log('üè¢ √âtablissement de test trouv√© :');
      console.log(`   ID: ${testEstablishment.id}`);
      console.log(`   Nom: ${testEstablishment.name}`);
      console.log(`   Adresse: ${testEstablishment.address}`);
      console.log(`   Propri√©taire ID: ${testEstablishment.ownerId}`);
      
      // Supprimer l'√©tablissement
      const deletedEstablishment = await prisma.establishment.delete({
        where: { id: testEstablishment.id }
      });
      
      console.log('\n‚úÖ √âtablissement de test supprim√© avec succ√®s !');
      console.log(`   Supprim√©: ${deletedEstablishment.name}`);
      
    } else {
      console.log('‚ùå Aucun √©tablissement de test trouv√©');
    }
    
    // V√©rifier les √©tablissements restants
    console.log('\nüìä √âtablissements restants :');
    const remainingEstablishments = await prisma.establishment.findMany({
      select: {
        id: true,
        name: true,
        address: true,
        city: true
      }
    });
    
    remainingEstablishments.forEach((est, index) => {
      console.log(`${index + 1}. ${est.name}`);
      console.log(`   Adresse: ${est.address}`);
      console.log(`   Ville: ${est.city || 'Non d√©finie'}`);
      console.log('');
    });
    
    console.log(`‚úÖ ${remainingEstablishments.length} √©tablissement(s) l√©gitime(s) conserv√©(s)`);
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await prisma.$disconnect();
  }
}

deleteTestEstablishment();
