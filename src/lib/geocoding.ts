// Module de g√©ocodage simplifi√©
export async function geocodeAddress(address: string): Promise<{ latitude: number; longitude: number } | null> {
  try {
    console.log('üåç G√©ocodage de l\'adresse:', address);
    
    // D√©terminer l'URL de base selon l'environnement
    const baseUrl = process.env.NODE_ENV === 'production' 
      ? process.env.NEXTAUTH_URL || 'https://envie2sortir.fr'
      : 'http://localhost:3001';
    
    // Utiliser l'API de g√©ocodage interne avec URL compl√®te
    const apiUrl = `${baseUrl}/api/geocode?address=${encodeURIComponent(address)}`;
    console.log('üîó URL de g√©ocodage:', apiUrl);
    
    const response = await fetch(apiUrl);
    
    if (!response.ok) {
      console.error('‚ùå Erreur API g√©ocodage:', response.status, response.statusText);
      return null;
    }
    
    const result = await response.json();
    
    if (result.success && result.data) {
      console.log('‚úÖ G√©ocodage r√©ussi:', result.data.latitude, result.data.longitude);
      return {
        latitude: result.data.latitude,
        longitude: result.data.longitude
      };
    } else {
      console.error('‚ùå G√©ocodage √©chou√©:', result.error);
      return null;
    }
  } catch (error) {
    console.error('‚ùå Erreur de g√©ocodage:', error);
    return null;
  }
}
