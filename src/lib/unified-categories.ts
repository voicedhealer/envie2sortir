// Syst√®me de cat√©gorisation unifi√© pour l'√©tape 4 et la page publique
// Garantit la coh√©rence entre le formulaire et l'affichage public

export interface CategoryItem {
  id: string;
  label: string;
  category: string;
  icon: string;
}

// Cat√©gories principales (m√™me structure que EstablishmentMainSections)
export const MAIN_CATEGORIES = {
  'ambiance-specialites': {
    title: 'Ambiance & Sp√©cialit√©s',
    icon: 'üé®',
    subCategories: {
      'ambiance': { title: 'Ambiance', icon: 'üéâ' },
      'points-forts': { title: 'Points forts', icon: '‚≠ê' },
      'populaire-pour': { title: 'Populaire pour', icon: 'üë•' },
      'offres': { title: 'Offres', icon: 'üçª' },
      'clientele': { title: 'Client√®le', icon: 'üë•' },
      'enfants': { title: 'Enfants', icon: 'üë∂' }
    }
  },
  'equipements-services': {
    title: '√âquipements & Services',
    icon: 'üõ†Ô∏è',
    subCategories: {
      'services': { title: 'Services', icon: 'üõéÔ∏è' },
      'accessibility': { title: 'Accessibilit√©', icon: '‚ôø' },
      'parking': { title: 'Parking', icon: 'üÖøÔ∏è' },
      'health': { title: 'Sant√© et s√©curit√©', icon: 'üè•' }
    }
  },
  'informations-pratiques': {
    title: 'Informations pratiques',
    icon: '‚ÑπÔ∏è',
    subCategories: {
      'groupes-reservations': { title: 'Groupes & R√©servations', icon: 'üë•' },
      'espaces': { title: 'Espaces', icon: '‚õî' }
    }
  },
  'moyens-paiement': {
    title: 'Moyens de paiement',
    icon: 'üí≥',
    subCategories: {
      'cartes-bancaires': { title: 'Cartes bancaires', icon: 'üí≥' },
      'paiements-mobiles': { title: 'Paiements mobiles', icon: 'üì±' },
      'especes-autres': { title: 'Esp√®ces et autres', icon: 'üíµ' }
    }
  }
};

// Mapping des items vers les cat√©gories
export function categorizeItem(item: string): { mainCategory: string; subCategory: string } {
  const itemLower = item.toLowerCase();
  
  // Ambiance & Sp√©cialit√©s
  if (itemLower.includes('ambiance') || itemLower.includes('cadre') || itemLower.includes('chaleureux') || 
      itemLower.includes('convivial') || itemLower.includes('d√©contract√©') || itemLower.includes('romantique')) {
    return { mainCategory: 'ambiance-specialites', subCategory: 'ambiance' };
  }
  
  if (itemLower.includes('excellent') || itemLower.includes('grand choix') || itemLower.includes('caf√©') || 
      itemLower.includes('th√©') || itemLower.includes('sp√©cialit√©')) {
    return { mainCategory: 'ambiance-specialites', subCategory: 'points-forts' };
  }
  
  if (itemLower.includes('d√©jeuner') || itemLower.includes('d√Æner') || itemLower.includes('solo') || 
      itemLower.includes('famille') || itemLower.includes('couple')) {
    return { mainCategory: 'ambiance-specialites', subCategory: 'populaire-pour' };
  }
  
  if (itemLower.includes('alcool') || itemLower.includes('bi√®re') || itemLower.includes('cocktail') || 
      itemLower.includes('vin') || itemLower.includes('v√©g√©tarien') || itemLower.includes('sain') || 
      itemLower.includes('portion') || itemLower.includes('halal') || itemLower.includes('casher') ||
      itemLower.includes('bio') || itemLower.includes('sans gluten') || itemLower.includes('vegan') ||
      itemLower.includes('plats') || itemLower.includes('menu') || itemLower.includes('sp√©cialit√©s')) {
    return { mainCategory: 'ambiance-specialites', subCategory: 'offres' };
  }
  
  if (itemLower.includes('√©tudiant') || itemLower.includes('groupe') || itemLower.includes('touriste') || 
      itemLower.includes('famille') || itemLower.includes('couple')) {
    return { mainCategory: 'ambiance-specialites', subCategory: 'clientele' };
  }
  
  if (itemLower.includes('enfant') || itemLower.includes('menu enfant') || itemLower.includes('famille')) {
    return { mainCategory: 'ambiance-specialites', subCategory: 'enfants' };
  }
  
  // √âquipements & Services
  if (itemLower.includes('livraison') || itemLower.includes('emporter') || itemLower.includes('sur place') || 
      itemLower.includes('service') || itemLower.includes('wifi') || itemLower.includes('climatisation') || 
      itemLower.includes('chauffage') || itemLower.includes('toilettes')) {
    return { mainCategory: 'equipements-services', subCategory: 'services' };
  }
  
  if (itemLower.includes('accessible') || itemLower.includes('fauteuil') || itemLower.includes('pmr') || 
      itemLower.includes('handicap')) {
    return { mainCategory: 'equipements-services', subCategory: 'accessibility' };
  }
  
  if (itemLower.includes('parking')) {
    return { mainCategory: 'equipements-services', subCategory: 'parking' };
  }
  
  if (itemLower.includes('premiers secours') || itemLower.includes('personnel form√©') || 
      itemLower.includes('casques') || itemLower.includes('lunettes') || itemLower.includes('sant√©')) {
    return { mainCategory: 'equipements-services', subCategory: 'health' };
  }
  
  // Informations pratiques
  if (itemLower.includes('r√©servation') || itemLower.includes('groupe') || itemLower.includes('booking')) {
    return { mainCategory: 'informations-pratiques', subCategory: 'groupes-reservations' };
  }
  
  if (itemLower.includes('espace') || itemLower.includes('terrasse') || itemLower.includes('salon')) {
    return { mainCategory: 'informations-pratiques', subCategory: 'espaces' };
  }
  
  // Moyens de paiement
  if (itemLower.includes('carte') || itemLower.includes('paiement') || itemLower.includes('nfc') || 
      itemLower.includes('pluxee') || itemLower.includes('titre') || itemLower.includes('visa') ||
      itemLower.includes('mastercard') || itemLower.includes('amex') || itemLower.includes('paypal')) {
    
    // Cartes bancaires
    if (itemLower.includes('visa') || itemLower.includes('mastercard') || itemLower.includes('amex') ||
        itemLower.includes('carte') || itemLower.includes('d√©bit') || itemLower.includes('cr√©dit')) {
      return { mainCategory: 'moyens-paiement', subCategory: 'cartes-bancaires' };
    }
    
    // Paiements mobiles
    if (itemLower.includes('nfc') || itemLower.includes('apple pay') || itemLower.includes('google pay') ||
        itemLower.includes('samsung pay') || itemLower.includes('mobile')) {
      return { mainCategory: 'moyens-paiement', subCategory: 'paiements-mobiles' };
    }
    
    // Esp√®ces et autres
    if (itemLower.includes('esp√®ces') || itemLower.includes('ch√®que') || itemLower.includes('paypal') ||
        itemLower.includes('pluxee') || itemLower.includes('titre')) {
      return { mainCategory: 'moyens-paiement', subCategory: 'especes-autres' };
    }
    
    // Par d√©faut pour les moyens de paiement
    return { mainCategory: 'moyens-paiement', subCategory: 'cartes-bancaires' };
  }
  
  return { mainCategory: 'ambiance-specialites', subCategory: 'ambiance' };
}

// Normaliser les items pour √©viter les doublons de variantes
function normalizeItem(item: string): string {
  // Extraire le pr√©fixe et le contenu si pr√©sent
  const prefixMatch = item.match(/^(\[[^\]]+\])?(.+)$/);
  const prefix = prefixMatch?.[1] || '';
  const content = prefixMatch?.[2] || item;
  
  const itemLower = content.toLowerCase();
  
  // Normaliser les variantes avec "disponible"
  if (itemLower.includes('livraison disponible')) return prefix + 'Livraison';
  if (itemLower.includes('vente √† emporter disponible')) return prefix + 'Vente √† emporter';
  if (itemLower.includes('repas sur place disponible')) return prefix + 'Repas sur place';
  if (itemLower.includes('service √† table disponible')) return prefix + 'Service √† table';
  
  // Normaliser les variantes avec "accept√©"
  if (itemLower.includes('carte bancaire accept√©e')) return prefix + 'Carte bancaire';
  if (itemLower.includes('esp√®ces accept√©es')) return prefix + 'Esp√®ces';
  
  // Normaliser les variantes avec "gratuit"
  if (itemLower.includes('wifi gratuit')) return prefix + 'WiFi';
  if (itemLower.includes('parking gratuit')) return prefix + 'Parking';
  
  return item; // Retourner l'item original si pas de normalisation
}

// Organiser les items par cat√©gories
export function organizeItemsByCategories(items: string[]): Record<string, Record<string, string[]>> {
  const organized: Record<string, Record<string, string[]>> = {};
  
  // Initialiser la structure
  Object.keys(MAIN_CATEGORIES).forEach(mainCat => {
    organized[mainCat] = {};
    Object.keys(MAIN_CATEGORIES[mainCat as keyof typeof MAIN_CATEGORIES].subCategories).forEach(subCat => {
      organized[mainCat][subCat] = [];
    });
  });
  
  // ‚úÖ CORRECTION : Normaliser ET d√©dupliquer les items
  const normalizedItems = items.map(normalizeItem);
  const uniqueItems = [...new Set(normalizedItems)];
  console.log('üîß NORMALISATION - Items originaux:', items.length, 'Items normalis√©s:', uniqueItems.length);
  
  // Cat√©goriser chaque item unique
  uniqueItems.forEach(item => {
    const { mainCategory, subCategory } = categorizeItem(item);
    if (organized[mainCategory] && organized[mainCategory][subCategory]) {
      // V√©rifier qu'on n'ajoute pas d√©j√† cet item dans cette sous-cat√©gorie
      if (!organized[mainCategory][subCategory].includes(item)) {
        organized[mainCategory][subCategory].push(item);
      }
    }
  });
  
  return organized;
}

// ‚úÖ NOUVELLE FONCTION : Organiser en respectant le contexte d'origine
export function organizeItemsByCategoriesWithContext(
  items: string[], 
  context: { services: string[]; ambiance: string[]; informationsPratiques: string[] }
): Record<string, Record<string, string[]>> {
  const organized: Record<string, Record<string, string[]>> = {};
  
  // Initialiser la structure
  Object.keys(MAIN_CATEGORIES).forEach(mainCat => {
    organized[mainCat] = {};
    Object.keys(MAIN_CATEGORIES[mainCat as keyof typeof MAIN_CATEGORIES].subCategories).forEach(subCat => {
      organized[mainCat][subCat] = [];
    });
  });
  
  // Normaliser ET d√©dupliquer les items
  const normalizedItems = items.map(normalizeItem);
  const uniqueItems = [...new Set(normalizedItems)];
  
  // ‚úÖ CORRECTION : Respecter le contexte d'origine et les pr√©fixes
  uniqueItems.forEach(item => {
    // V√©rifier si l'item a un pr√©fixe de sous-cat√©gorie
    const prefixMatch = item.match(/^\[([^\]]+)\](.+)$/);
    let subCategory: string;
    let cleanItem: string;
    
    if (prefixMatch) {
      // L'item a un pr√©fixe, utiliser la sous-cat√©gorie sp√©cifi√©e
      subCategory = prefixMatch[1];
      cleanItem = prefixMatch[2];
    } else {
      // Pas de pr√©fixe, utiliser la cat√©gorisation automatique
      const categorized = categorizeItem(item);
      subCategory = categorized.subCategory;
      cleanItem = item;
    }
    
    let mainCategory: string;
    
    // Si l'item vient de services, le mettre dans equipements-services
    if (context.services.includes(item)) {
      mainCategory = 'equipements-services';
    }
    // Si l'item vient de informationsPratiques, le mettre dans informations-pratiques
    else if (context.informationsPratiques.includes(item)) {
      mainCategory = 'informations-pratiques';
    }
    // Si l'item vient de ambiance, garder la cat√©gorisation automatique mais forcer ambiance-specialites
    else if (context.ambiance.includes(item)) {
      mainCategory = 'ambiance-specialites';
    } else {
      // Fallback sur la cat√©gorisation automatique
      const categorized = categorizeItem(item);
      mainCategory = categorized.mainCategory;
    }
    
    if (organized[mainCategory] && organized[mainCategory][subCategory]) {
      if (!organized[mainCategory][subCategory].includes(cleanItem)) {
        organized[mainCategory][subCategory].push(cleanItem);
      }
    }
  });
  
  return organized;
}

// Obtenir les suggestions intelligentes bas√©es sur les donn√©es manquantes
export function getSmartSuggestions(existingItems: string[], establishmentType: string = 'restaurant'): string[] {
  const suggestions: string[] = [];
  
  // V√©rifier ce qui manque dans chaque cat√©gorie
  const organized = organizeItemsByCategories(existingItems);
  
  // Suggestions pour Ambiance & Sp√©cialit√©s
  if (organized['ambiance-specialites']['ambiance'].length === 0) {
    suggestions.push('Ambiance d√©contract√©e', 'Cadre agr√©able', 'Ambiance chaleureuse');
  }
  
  if (organized['ambiance-specialites']['points-forts'].length === 0) {
    suggestions.push('Excellent pour les groupes', 'Grand choix de boissons');
  }
  
  if (organized['ambiance-specialites']['populaire-pour'].length === 0) {
    suggestions.push('Populaire pour les d√©jeuners', 'Populaire pour les d√Æners');
  }
  
  // Suggestions pour √âquipements & Services
  if (organized['equipements-services']['services'].length === 0) {
    suggestions.push('WiFi gratuit', 'Climatisation', 'Toilettes');
  }
  
  if (organized['equipements-services']['accessibility'].length === 0) {
    suggestions.push('Accessible aux personnes √† mobilit√© r√©duite');
  }
  
  if (organized['equipements-services']['parking'].length === 0) {
    suggestions.push('Parking gratuit', 'Parking payant');
  }
  
  return suggestions;
}
